# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xpserver.models.base_model_ import Model
from xpserver import util


class Datafile(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, location=None, sha1=None):  # noqa: E501
        """Datafile - a model defined in Swagger

        :param location: The location of this Datafile.  # noqa: E501
        :type location: str
        :param sha1: The sha1 of this Datafile.  # noqa: E501
        :type sha1: str
        """
        self.swagger_types = {
            'location': str,
            'sha1': str
        }

        self.attribute_map = {
            'location': 'location',
            'sha1': 'sha1'
        }

        self._location = location
        self._sha1 = sha1

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Datafile of this Datafile.  # noqa: E501
        :rtype: Datafile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this Datafile.


        :return: The location of this Datafile.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Datafile.


        :param location: The location of this Datafile.
        :type location: str
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")  # noqa: E501

        self._location = location

    @property
    def sha1(self):
        """Gets the sha1 of this Datafile.


        :return: The sha1 of this Datafile.
        :rtype: str
        """
        return self._sha1

    @sha1.setter
    def sha1(self, sha1):
        """Sets the sha1 of this Datafile.


        :param sha1: The sha1 of this Datafile.
        :type sha1: str
        """
        if sha1 is None:
            raise ValueError("Invalid value for `sha1`, must not be `None`")  # noqa: E501

        self._sha1 = sha1
